{"body":"Disclaimer\r\n==========\r\n\r\n**This bundle is in development stage!!! Do not use it in production.**\r\n\r\nCurrent buid status of master : [![Build Status](https://secure.travis-ci.org/KnpLabs/KnpJsonSchemaBundle.png)](https://travis-ci.org/KnpLabs/KnpJsonSchemaBundle)\r\n\r\nThe generated json schema is based on [IETF Specification](http://tools.ietf.org/html/draft-zyp-json-schema-03) which expired on May 26, 2011.\r\nDespite my search, I couldn't find any more up-to-date spec, so if you know one, please let me know.\r\n\r\nThe JsonSchema Bundle\r\n=====================\r\n\r\nThe purpose of this bundle is to provide a service which allow you to generate json schema based on validation metadata.\r\n\r\nIf the question is about the purpose of Json schema, well, I can only advise you to take a look at the official website: http://json-schema.org/\r\n\r\nInstallation\r\n------------\r\nAdd the following to your composer.json:\r\n``` json\r\n{\r\n    \"mininmum-stability\": \"dev\",\r\n    \"require\": {\r\n        \"knplabs/json-schema-bundle\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\nand run `composer.phar update knplabs/json-schema-bundle`\r\n\r\nConfiguration\r\n-------------\r\nRegister the compiler pass in your bundle like so :\r\n\r\n```php\r\n//src/MyBundle/MyBundle.php\r\n\r\npublic function build(ContainerBuilder $container)\r\n{\r\n    $container->addCompilerPass(new Knp\\JsonSchemaBundle\\DependencyInjection\\Compiler\\RegisterJsonSchemaCompilerPass($this));\r\n}\r\n```\r\n\r\nYou must also import some routing inforamtions:\r\n```yaml\r\n#app/config/routing.yml\r\n\r\njson_schema:\r\n    resource: \"@KnpJsonSchemaBundle/Resources/config/routing.yml\"\r\n\r\n```\r\n\r\nThen in your model/entity for which you want to provide a json schema:\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse Knp\\JsonSchemaBundle\\Annotations as Json;\r\n\r\n/**\r\n * @Json/Schema(\"huitre\")\r\n */\r\nclass Huitre\r\n{\r\n\r\n}\r\n```\r\n\r\nUsage\r\n-----\r\nYou may use the `json_schema.response.factory` to automatically link the generated schema to an object.\r\n```php\r\nclass DefaultController extends Controller\r\n{\r\n    public function indexAction()\r\n    {\r\n        $user = new User();\r\n        $user->age = 10;\r\n\r\n        return $this->get('json_schema.response.factory')->create($user);\r\n    }\r\n}\r\n```\r\n\r\nWill generate the following response:\r\n\r\n\r\nYou can also access the json schema through `/schemas/{name}.json`\r\n\r\n\r\n\r\nInternals\r\n---------\r\nIt uses the Validator and Doctrine FormTypeGuesser to guess values of 'required', 'type', 'pattern', 'minLength' and 'maxLength'.\r\n\r\nFor property that couldn't be guessed with these guessers, another handler take over from it.\r\n\r\nYou can see all constraints that are handled in the `ExtraValidatorConstraintsHandler` class.\r\n\r\nYou can also hardly specified the json schema constraints you want by using the annotations provided with this bundle.\r\n\r\n\r\nExamples\r\n--------\r\n### Entity\r\n```php\r\n<?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse Symfony\\Component\\Validator\\Constraints as Assert;\r\n\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * @ORM\\Entity\r\n **/\r\nclass User\r\n{\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\Column(type=\"integer\")\r\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\r\n     */\r\n    protected $id;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", nullable=false)\r\n     */\r\n    protected $name;\r\n\r\n    /**\r\n     * @Assert\\Type(type=\"string\")\r\n     * @Assert\\Email()\r\n     * @Assert\\NotBlank()\r\n     */\r\n    protected $email;\r\n\r\n    /**\r\n     * @Assert\\Regex(pattern=\"/^[0-9]{5}$/\")\r\n     */\r\n    protected $zipCode;\r\n\r\n    /**\r\n     * @Assert\\Length(min=\"2\", max=\"50\")\r\n     */\r\n    protected $address;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"integer\")\r\n     * @Assert\\Length(min=\"21\")\r\n     */\r\n    protected $age;\r\n\r\n    /**\r\n     * @Assert\\Blank()\r\n     */\r\n    protected $file;\r\n\r\n    /**\r\n     * @Assert\\Choice(choices={\"toto\",\"tutu\",\"tata\"})\r\n     */\r\n    protected $type;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"decimal\", nullable=true)\r\n     */\r\n    protected $balance;\r\n\r\n    /**\r\n     * @Assert\\Type(type=\"string\")\r\n     * @Assert\\Type(type=\"number\")\r\n     */\r\n    protected $height;\r\n}\r\n```\r\n\r\n### Result\r\n```json\r\n{\r\n    \"title\": \"user\",\r\n    \"properties\": {\r\n        \"id\": {\r\n            \"required\": true,\r\n            \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n        },\r\n        \"email\": {\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n        },\r\n        \"zipCode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\",\r\n            \"pattern\": \"[0-9]{5}\"\r\n        },\r\n        \"address\": {\r\n            \"required\": false,\r\n            \"type\": \"string\",\r\n            \"minLength\": \"2\",\r\n            \"maxLength\": \"50\"\r\n        },\r\n        \"age\": {\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"minimum\": \"21\"\r\n        },\r\n        \"file\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n            \"required\": false,\r\n            \"type\": \"string\",\r\n            \"enum\": [\r\n                \"toto\",\r\n                \"tutu\",\r\n                \"tata\"\r\n            ]\r\n        },\r\n        \"balance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n        },\r\n        \"height\": {\r\n            \"required\": false,\r\n            \"type\": [\r\n                \"string\",\r\n                \"number\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nContributors\r\n------------\r\n - Gildas Quéméner [gquemener](https://github.com/gquemener)\r\n - Florian Klein [docteurklein](https://github.com/docteurklein)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A bundle to generate json schema based on various metadata","name":"KnpJsonSchemaBundle"}